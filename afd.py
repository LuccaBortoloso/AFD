# -*- coding: utf-8 -*-
"""AFD.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gwzMlWTRraF4qsqYIVfXM5bMI0y5wDKG
"""

class Estado:
  def __init__(self, nome, listaEstadosPossiveis, listaAlfabeto, inicial, final):
    self.nome = nome
    self.listaEstadosPossiveis = listaEstadosPossiveis
    self.listaAlfabeto = listaAlfabeto
    self.inicial = inicial
    self.final = final

def criandoTabela(automato):
    tabela = {
        
    }
    
    for i in range(len(automato)):
      for j in range (len(automato)):
        if(j != i and j > i):
          if(automato[i].final != automato[j].final):
            aux = automato[i].nome + ',' + automato[j].nome
            print(aux)
            tabela[aux] = 'x'
          else:
            aux = automato[i].nome + ',' + automato[j].nome
            print(aux)
            tabela[aux] = '0'
        else:
          continue
    
    for i in tabela:
      #Passando pela tabela
      if(tabela[i] == '0'):
          aux = i.split(',')
          indice = 0
          
          #Passando pelo automato para verificar os estados possíveis
          for j in automato:
            if(j.nome == aux[0]):
              aux1 = j
            if(j.nome == aux[1]):
              aux2 = j
              
          #Verificando os estados possíveis
          for k in range(len(aux1.listaAlfabeto)):
            auxEst = aux1.listaEstadosPossiveis[k] + ',' + aux2.listaEstadosPossiveis[k]
            auxEstInv = aux2.listaEstadosPossiveis[k] + ',' + aux1.listaEstadosPossiveis[k]
            if(auxEst not in tabela and auxEstInv not in tabela):              
              continue
            elif(auxEst in tabela and auxEstInv not in tabela):
              if(tabela[auxEst] == 'x'):
                tabela[i] = 'x'
              else:
                for l in automato:
                  if(l.nome == aux1.listaEstadosPossiveis[k]):
                    auxiliar1 = l
                  elif(l.nome == aux2.listaEstadosPossiveis[k]):
                    auxiliar2 = l
                if((auxiliar1.final == False and auxiliar2.final == True) or (auxiliar2.final == False and auxiliar1.final == True)):
                  tabela[i] = 'x'
                else:
                  tabela[auxEst] = i
            else:
              if(tabela[auxEstInv] == 'x'):
                tabela[i] = 'x'
              else:
                for l in automato:
                  if(l.nome == aux1.listaEstadosPossiveis[k]):
                    auxiliar1 = l
                  elif(l.nome == aux2.listaEstadosPossiveis[k]):
                    auxiliar2 = l
                if((auxiliar1.final == False and auxiliar2.final == True) or (auxiliar2.final == False and auxiliar1.final == True)):
                  tabela[i] = 'x'
                else:
                  tabela[auxEstInv] = i
      elif(tabela[i] == 'x'):
          continue
      else:
          guardar = tabela[i]
          aux = i.split(',')
          for j in automato:
            if(j.nome == aux[0]):
              aux1 = j
            if(j.nome == aux[1]):
              aux2 = j
              
          #Verificando os estados possíveis
          for k in range(len(aux1.listaAlfabeto)):
            auxEst = aux1.listaEstadosPossiveis[k] + ',' + aux2.listaEstadosPossiveis[k]
            auxEstInv = aux2.listaEstadosPossiveis[k] + ',' + aux1.listaEstadosPossiveis[k]
            if(auxEst not in tabela and auxEstInv not in tabela):              
              continue
            else:
              for l in automato:
                  if(l.nome == aux1.listaEstadosPossiveis[k]):
                    auxiliar1 = l
                  elif(l.nome == aux2.listaEstadosPossiveis[k]):
                    auxiliar2 = l
              if((auxiliar1.final == False and auxiliar2.final == True) or (auxiliar2.final == False and auxiliar1.final == True)): 
                tabela[guardar] = 'x'
                tabela[i] = 'x'
              else:
                tabela[guardar] = '0'
                tabela[i] = '0'
    print(tabela)

def aceitePalavra(automato, palavra):
  aceita = True
  estadoAtual = automato[0]
  indice = 0
  
  while(True):
    for i in range(len(estadoAtual.listaAlfabeto)):
      if(estadoAtual.listaAlfabeto[i] == palavra[indice]):
        for j in automato:
          if(estadoAtual.listaEstadosPossiveis[i] == j.nome):
            estadoAtual = j
            break
        break
    indice += 1
    if(indice == len(palavra)):
      if(estadoAtual.final == False):
        aceita = False
      break
    
  if(aceita):
    return 'A palavra foi aceita.'
  else:
    return 'A palavra foi rejeitada.'

def main():
  q0 = Estado('q0', ['q1', 'q3'], ['a', 'b'], True, False)
  q1 = Estado('q1', ['q3', 'q2'], ['a', 'b'], False, False)
  q2 = Estado('q2', ['q2', 'q2'], ['a', 'b'], False, True)
  q3 = Estado('q3', ['q3', 'q3'], ['a', 'b'], False, False)
  automato = [q0, q1, q2, q3]
  
  palavraAceita = aceitePalavra(automato, 'ab')
  print(palavraAceita)
  
  criandoTabela(automato)
  
main()